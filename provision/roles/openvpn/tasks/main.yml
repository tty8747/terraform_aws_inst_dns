---

- name: "Install openvpn"
  apt:
    name: openvpn
    state: present

- name: "Create dir for easyrsa"
  file:
    path: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    state: directory
    mode: 0700
    owner: "{{ your_user }}"
    group: root

- name: "Unpack easyrsa archive"
  unarchive:
    src: "{{ link_to_easy_rsa }}"
    dest: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    extra_opts: [--strip-components=1]
    remote_src: yes
    owner: "{{ your_user }}"
    group: root
    
- name: "Push vars"
  template:
    src: "roles/openvpn/templates/vars.j2"
    dest: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/vars"
    owner: "{{ your_user }}"
    group: root
    mode: 0600

- name: "Push server config"
  template:
    src: "roles/openvpn/templates/server.conf.j2"
    dest: "/etc/openvpn/{{ common_name }}.conf"
    owner: root
    group: root
    mode: 0600
  notify: "Reload OpenVPN@{{ common_name }}"

- name: "Init pki"
  become_user: "{{ your_user }}"
  command: ./easyrsa init-pki
  register: init_pki
  args:
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    creates: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki"

- name: "Build CA"
  become_user: "{{ your_user }}"
  expect:
    echo: "yes"
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    command: ./easyrsa build-ca
    timeout: 5
    responses:
      Enter New CA Key Passphrase(.*): "{{ CA_pass }}"
      Re-Enter New CA Key Passphrase(.*): "{{ CA_pass }}"
      (.*)\[Easy-RSA CA\]:$: 'server'
  register: build_ca
  when: init_pki.changed

- name: "gen-req {{ common_name }}"
  become_user: "{{ your_user }}"
  expect:
    echo: "yes"
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    command: ./easyrsa gen-req server nopass
    timeout: 5
    responses:
      Common Name (.*): "{{ common_name }}" 
  register: gen_req_server
  when: build_ca.changed

- name: "sign-req {{ common_name }}"
  become_user: "{{ your_user }}"
  expect:
    echo: "yes"
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    command: ./easyrsa sign-req server server
    timeout: 5
    responses:
      Confirm request details(.*): 'yes'
      Enter pass phrase for(.*): "{{ CA_pass }}"
  register: sign_req
  when: gen_req_server.changed

- name: "gen-dh"
  become_user: "{{ your_user }}"
  command: ./easyrsa gen-dh
  args:
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
  when: sign_req.changed

- name: "ta.key"
  become_user: "{{ your_user }}"
  command: openvpn --genkey --secret ta.key
  args:
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki"
  when: sign_req.changed

- name: "Create dir for easyrsa"
  file:
    path: "/etc/openvpn/{{ common_name }}/"
    state: directory
    mode: 0700
    owner: root
    group: root

- name: "copy server ca, cert and key to openvpn directory"
  copy:
    remote_src: "yes"
    src: "{{ item }}" 
    dest: "/etc/openvpn/{{ common_name }}/"
    owner: root
    group: root
    mode: 0600
  with_items:
    - "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/private/server.key"
    - "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/issued/server.crt"
    - "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/dh.pem"
    - "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/ta.key"
    - "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/ca.crt"

- name: "Create dir for user files"
  file: 
    path: "{{ path_to_easy_rsa }}/client-configs/{{ item }}/keys/"
    state: directory
    recurse: "yes"
    owner: "{{ your_user }}"
    group: root
    mode: 0700
  with_items: "{{ common_name_clients }}"

- name: "gen-req for all clients"
  become_user: "{{ your_user }}"
  expect:
    echo: "yes"
    command: ./easyrsa gen-req "{{ item }}" nopass
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    creates: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/private/{{ item }}.key"
    timeout: 5
    responses:
      Common Name (.*): "{{ item }}" 
  with_items: "{{ common_name_clients }}"

- name: "sign-req for all clients"
  become_user: "{{ your_user }}"
  expect:
    echo: "yes"
    command: ./easyrsa sign-req client "{{ item }}"
    chdir: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}"
    creates: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/issued/{{ item }}.crt"
    timeout: 5
    responses:
      Confirm request details(.*): 'yes'
      Enter pass phrase for(.*): "{{ CA_pass }}"
  with_items: "{{ common_name_clients }}"

- name: "copy ca.crt to user folders"
  copy:
    remote_src: "yes"
    src: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/ca.crt"
    dest: "{{ path_to_easy_rsa }}/client-configs/{{ item }}/keys"
    owner: "{{ your_user }}"
    group: root
    mode: 0600
  with_items: "{{ common_name_clients }}"

- name: "copy ta.key to user folders"
  copy:
    remote_src: "yes"
    src: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/ta.key"
    dest: "{{ path_to_easy_rsa }}/client-configs/{{ item }}/keys"
    owner: "{{ your_user }}"
    group: root
    mode: 0600
  with_items: "{{ common_name_clients }}"

- name: "copy certificate to user folders"
  copy:
    remote_src: "yes"
    src: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/issued/{{ item }}.crt"
    dest: "{{ path_to_easy_rsa }}/client-configs/{{ item }}/keys"
    owner: "{{ your_user }}"
    group: root
    mode: 0600
  with_items: "{{ common_name_clients }}"

- name: "copy key to user folders"
  copy:
    remote_src: "yes"
    src: "{{ path_to_easy_rsa }}/{{ easyrsa_folder }}/pki/private/{{ item }}.key"
    dest: "{{ path_to_easy_rsa }}/client-configs/{{ item }}/keys"
    owner: "{{ your_user }}"
    group: root
    mode: 0600
  with_items: "{{ common_name_clients }}"

- name: "Push config to user folders"
  template:
    src: "roles/openvpn/templates/client.ovpn.j2"
    dest: "{{ path_to_easy_rsa }}/client-configs/{{ item }}/{{ common_name }}.ovpn"
    owner: "{{ your_user }}"
    group: root
    mode: 0600
  with_items: "{{ common_name_clients }}"

- name: "Pack user files"
  archive: 
    path: "{{ path_to_easy_rsa }}/client-configs/{{ item }}"
    dest: "{{ path_to_easy_rsa }}/client-configs/{{ item }}.zip"
    format: zip
    remove: no
  with_items: "{{ common_name_clients }}"
  tags:
    - pack

- name: "Set ip forwarding on in /proc and sysctl -p"
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    sysctl_set: "yes"
    state: present
    reload: "yes"

- name: "Openvpn status started"
  systemd:
    state: started
    name: "openvpn@{{ common_name }}"
    enabled: "yes"
